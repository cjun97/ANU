말 그대로 이름에 관한 내용들이였다.

초반에는 간단히

전역변수와 지역변수에 대해 설명을 했었고

 

그 다음부터는 이름을 함수단위가 아닌 블럭단위{}로 나눈다는걸 설명하고 있다. (이건 처음 알았다...?)

그리고 전역변수로 선언된 변수명을 함수안에서 사용할 수 있을까 에 대한 의문이 생겨서 실험을 해 보았는데

가능하다! 라는 결론이 나와버렸다. (물론 dev에서만. visual studio 에서는 어떻게 구동할지는 모르겠다. 실행하기에는 워낙 무거워서...)

 

변수는 같은 이름이더라도 속해있는 블록에 선언된 변수를 따라간다 라는게 결론인 것 같다.

 

이후에는 namespace에 대해 나오는데

namespace로써 사용을 하기 위해서는 함수를 namespace로 선언을 해야한다.

그리고 서로 다른 위치에 선언을 할지라도 namespace이름만 같으면 같은 namespace로 인식을 한다는것도 알게 되었다.

스코프 오퍼레이터를 사용하는게 귀찮다면 using 을 사용하여 축약을 할 수 있다.

다만 using 하기로한 namespace에만 해당하는 이야기고 변수명이 같더라도 namespace가 다르면 얄짤없이 스코프 오퍼레이터를 사용해야한다는 것과 using 을 하더라도 사용하려는 변수명이 같으면 컴파일 에러가 뜬다는 것을 확인했다.

 

그리고 아까 얘기 했듯이 이름을 블럭단위로 나누므로 블럭만 다르면 문제가 없다는 것을 확인했다. (물론 사용전에 블럭에서 using namespace를 선언해 주어야 하지만.)

 

이후에는 = 연산자를 사용해 namespace의 이름을 변경하는 것과 std namespace에 대한 간략한 설명과 예를 알려준다

 

그리고 c 처음 배울때 배우는 전역변수와 지역변수의 차이

전역변수는 default 값이 0으로 초기화가 돼며 지역변수는 초기화를 해주지 않으면 어떤값이 튀어나올지 모른다

이를 유식하게 storage class 라고 부르며 전역변수는 static storage 이고 지역변수는 automatic storage라고 일컫는다

 

 

이번 대경권 문제를 풀면서 뭔가... 방향성만 잘잡으면 할만 할 것 같다는 느낌을 많이 받았다.

실제로도 효율은 개한테나 가져다 주긴 했지만 프로그램 자체는 문제에서 제시한 대로 짤 수 있었다. (1,2 번)

뭔가... 문제가 어떤 요구를 하는지는 알겠는데 이를 어떻게 구현해야할 지 참 막막했었기도 하다. (특히 3번 문항)

다음번에 이런 류의 대회를 한다고 했을때 적어도 절반은 풀고 싶다.
